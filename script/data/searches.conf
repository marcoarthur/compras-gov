## no critic
[

    # all providers from Ubatuba city ( id 72095 )
    {
        description => 'all providers from Ubatuba city ( id 72095 )',
        search      => {
            module => 'fornecedores',
            params => { id_municipio => 72095 }
        },
        cb  => 'default_cb',
        run => 0,
    },

    # bids from provider (id 538083)
    {
        description => 'bids from provider (id 538083)',
        search      => {
            module => 'licitacoes',
            params => { id_fornecedor => 538083 }
        },
        cb  => 'default_cb',
        run => 0,

    },

    # find bids from ubatuba providers
    {
        description => 'bids from Ubatuba-SP providers',
        search      => {
            module => 'fornecedores',
            params => { id_municipio => 72095 }
        },
        cb  => 'default_cb',
        run => 0,
    },

    # find gov contracts involving personal contractors
    {
        description => 'contracts involving personal contractors',
        search      => {
            module => 'contratos',
            params => { tipo_pessoa => 'PF' }
        },
        cb  => 'default_cb',
        run => 0,

    },

    # find gov contracts involving no licitation of contractors during 2020 up to 50.000
    {
        description => 'no licitation contracts during 2020 and value up to 50.000 BRL',
        search      => {
            module => 'contratos',
            params => {
                modalidade               => 6,
                data_inicio_vigencia_min => '2020-01-01',
                valor_inicial_min        => 50000
            }
        },
        cb  => 'default_cb',
        run => 0,

    },

    # find gov contracts during 2020 up to 100.000
    {
        description => 'contracts during 2020,  value up to 100.000 BRL',
        search      => {
            module => 'contratos',
            params => {
                data_inicio_vigencia_min => '2020-01-01',
                valor_inicial_min        => 2 * 50000
            }
        },
        cb  => 'default_cb',
        run => 0,

    },

    # find uasg descriptions
    {
        description => 'find uasg description',
        search      => {
            module => 'licitacoes',
            method => 'uasgs',
            params => { id_orgao => 1000 },
        },
        cb => sub { my ($data) = @_; p $data; return $data },
    },

    # find uasg descriptions
    {
        description => 'find uasg',
        search      => {
            module => 'licitacoes',
            method => 'uasgs',
            params => { nome => $ARGV[1] },
        },
        cb => 'default_cb',
    },

    # find price descriptions
    {
        description => 'find prices from uasg',
        search      => {
            module => 'licitacoes',
            method => 'precos_praticados',
            params => { uasg => $ARGV[1] },
        },
        cb => 'default_cb',
    },

    # find bids from a uasg
    {
        description => 'find all bids from particular uasg',
        search      => {
            module => 'licitacoes',
            method => 'licitacoes',
            params => { uasg => $ARGV[1] },
        },
        cb  => 'default_cb',
        run => 0,
    },

    # all bids this year
    {
        description => 'find all bids this year (2020)',
        search      => {
            module => 'licitacoes',
            method => 'licitacoes',
            params => { data_publicacao_min => $ARGV[1] },
        },
        cb  => 'default_cb',
        run => 0,
    },
    {
        description => 'uasg information: need id',
        search      => {
            module => 'licitacoes',
            method => 'uasg',
            params => { id => $ARGV[1] },
        },
        cb  => 'default_cb',
        run => 0,
    },
    {
        description => 'licitation information: need id',
        search      => {
            module => 'licitacoes',
            method => 'licitacao',
            params => { id => $ARGV[1] },
        },
        cb  => 'default_cb',
        run => 0,
    },
    {
        description => 'licitation itens information: need id',
        search      => {
            module    => 'licitacoes',
            method    => 'licitacao',
            submethod => 'itens',
            params    => { id => $ARGV[1] },
        },
        cb  => 'default_cb',
        run => 0,
    },
    {
        description => 'licitation and their itens information: minimal data',
        search      => {
            module => 'licitacoes',
            method => 'licitacoes',
            params => {
                data_publicacao_min => $ARGV[1],
            },
        },
        cb => sub {
            my $licitations = shift->{results};
            use Compras::Search;
            use DDP;

            my $find_itens = sub {

                # find itens
                my $bid = shift;
                my $s   = new Compras::Search->new;
                $s->query(
                    {
                        module    => 'licitacoes',
                        method    => 'licitacao',
                        submethod => 'itens',
                        params    => {
                            id => $bid->identificador,
                        },
                    }
                );
                my $itens = $s->search->{results};

                # add new attributes related to itens
                my $sum;
                $itens->each( sub { my $v = $_->valor_estimado || 0; $sum += $v } );
                $bid->add_to_attrs( "soma_valor_itens", "soma dos valores dos itens" );
                $bid->attr("soma_valor_itens");
                $bid->soma_valor_itens($sum);

                #p $bid;
            };
            $licitations->each($find_itens)->each( sub { my $h = shift->to_hash; p $h} );

        },
        run => 0,
    },

];
